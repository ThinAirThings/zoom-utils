{"version":3,"sources":["../src/index.ts"],"sourcesContent":["\nexport type ContainerState = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    scale: number;\n}\nexport type ScreenState = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\nexport type ViewportState = {\n    x: number;\n    y: number;\n    scale: number;\n}\nexport type Point = {\n    x: number;\n    y: number;\n}\ntype InputStateXY = {\n    x: number;\n    y: number;\n}\n\ntype InputStateWH = {\n    width: number;\n    height: number;\n}\nexport function screenStateToAbsoluteState(viewportState: ViewportState, state: InputStateXY&InputStateWH): { x:number, y: number, width: number, height: number }\nexport function screenStateToAbsoluteState(viewportState: ViewportState, state: InputStateXY): { x: number, y: number };\nexport function screenStateToAbsoluteState(viewportState: ViewportState, state: InputStateWH): { width: number, height: number };\nexport function screenStateToAbsoluteState(viewportState: ViewportState, state: Partial<ContainerState>): Partial<ContainerState>;\n\nexport function screenStateToAbsoluteState(viewportState: ViewportState, state: Partial<ContainerState>): Partial<ContainerState> {\n    return {\n        ...(state.x !== undefined && { x: (viewportState.scale * state.x) - viewportState.x }),\n        ...(state.y !== undefined && { y: (viewportState.scale * state.y) - viewportState.y }),\n        ...(state.width !== undefined && { width: viewportState.scale * state.width }),\n        ...(state.height !== undefined && { height: viewportState.scale * state.height })\n    };\n}\n\nexport function absoluteStateToScreenState(viewportState: ViewportState, state: InputStateXY&InputStateWH): { x:number, y: number, width: number, height: number }\nexport function absoluteStateToScreenState(viewportState: ViewportState, state: InputStateXY): { x: number, y: number };\nexport function absoluteStateToScreenState(viewportState: ViewportState, state: InputStateWH): { width: number, height: number };\nexport function absoluteStateToScreenState(viewportState: ViewportState, state: Partial<ContainerState>): Partial<ContainerState>;\nexport function absoluteStateToScreenState(viewportState: ViewportState, state: Partial<ContainerState>): Partial<ContainerState> {\n    return {\n        ...(state.x !== undefined && { x: (state.x + viewportState.x) / viewportState.scale }),\n        ...(state.y !== undefined && { y: (state.y + viewportState.y) / viewportState.scale }),\n        ...(state.width !== undefined && { width: state.width / viewportState.scale }),\n        ...(state.height !== undefined && { height: state.height / viewportState.scale })\n    };\n}\n\nexport const absoluteLengthToScreenLength = (viewportState: ViewportState, length: number): number => {\n    return length / viewportState.scale;\n}\nexport const screenLengthToAbsoluteLength = (viewportState: ViewportState, length: number): number => {\n    return length * viewportState.scale;\n}\nexport const getSelectionBoundingBox = (viewportState: ViewportState, selectedContainerStatesSet: ContainerState[]): ScreenState => {\n    let minX = Number.MAX_SAFE_INTEGER;\n    let minY = Number.MAX_SAFE_INTEGER;\n    let maxX = Number.MIN_SAFE_INTEGER;\n    let maxY = Number.MIN_SAFE_INTEGER;\n\n    selectedContainerStatesSet.forEach((containerState) => {\n        const { x, y, width, height } = containerState;\n        minX = Math.min(minX, x);\n        minY = Math.min(minY, y);\n        maxX = Math.max(maxX, x + width);\n        maxY = Math.max(maxY, y + height);\n    });\n\n    return {\n        x: 1/viewportState.scale * (minX + viewportState.x),\n        y: 1/viewportState.scale * (minY + viewportState.y),\n        width: 1/viewportState.scale * (maxX - minX),\n        height: 1/viewportState.scale * (maxY - minY),\n    };\n}\n\nexport const mouseEventToApplicationTranslation = (event: PointerEvent | WheelEvent, viewportState: ViewportState, containerState: ContainerState) => {\n    const targetScreenState = absoluteStateToScreenState(viewportState, containerState)\n    const pointRelativeToApplication = {\n        x: Math.round(1/containerState.scale * viewportState.scale * (event.clientX - targetScreenState.x)),\n        y: Math.round(1/containerState.scale * viewportState.scale * (event.clientY - targetScreenState.y))\n    }\n    return pointRelativeToApplication\n}\n\n\nexport const absoluteContainerStateToRelativeDimensions = (containerState: ContainerState) => {\n    return {\n        width: (1/containerState.scale) * containerState.width,\n        height: (1/containerState.scale) * containerState.height\n    }\n}\n\nexport const relativeDimensionsToAbsoluteDimensions = (containerState: ContainerState, dimensions: InputStateWH) => {\n    return {\n        width: containerState.scale * dimensions.width,\n        height: containerState.scale * dimensions.height\n    }\n}\n\n\nexport const ptDistance = (p1: Point, p2: Point) => {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2))\n}"],"mappings":";AAqCO,SAAS,2BAA2B,eAA8B,OAAyD;AAC9H,SAAO;AAAA,IACH,GAAI,MAAM,MAAM,UAAa,EAAE,GAAI,cAAc,QAAQ,MAAM,IAAK,cAAc,EAAE;AAAA,IACpF,GAAI,MAAM,MAAM,UAAa,EAAE,GAAI,cAAc,QAAQ,MAAM,IAAK,cAAc,EAAE;AAAA,IACpF,GAAI,MAAM,UAAU,UAAa,EAAE,OAAO,cAAc,QAAQ,MAAM,MAAM;AAAA,IAC5E,GAAI,MAAM,WAAW,UAAa,EAAE,QAAQ,cAAc,QAAQ,MAAM,OAAO;AAAA,EACnF;AACJ;AAMO,SAAS,2BAA2B,eAA8B,OAAyD;AAC9H,SAAO;AAAA,IACH,GAAI,MAAM,MAAM,UAAa,EAAE,IAAI,MAAM,IAAI,cAAc,KAAK,cAAc,MAAM;AAAA,IACpF,GAAI,MAAM,MAAM,UAAa,EAAE,IAAI,MAAM,IAAI,cAAc,KAAK,cAAc,MAAM;AAAA,IACpF,GAAI,MAAM,UAAU,UAAa,EAAE,OAAO,MAAM,QAAQ,cAAc,MAAM;AAAA,IAC5E,GAAI,MAAM,WAAW,UAAa,EAAE,QAAQ,MAAM,SAAS,cAAc,MAAM;AAAA,EACnF;AACJ;AAEO,IAAM,+BAA+B,CAAC,eAA8B,WAA2B;AAClG,SAAO,SAAS,cAAc;AAClC;AACO,IAAM,+BAA+B,CAAC,eAA8B,WAA2B;AAClG,SAAO,SAAS,cAAc;AAClC;AACO,IAAM,0BAA0B,CAAC,eAA8B,+BAA8D;AAChI,MAAI,OAAO,OAAO;AAClB,MAAI,OAAO,OAAO;AAClB,MAAI,OAAO,OAAO;AAClB,MAAI,OAAO,OAAO;AAElB,6BAA2B,QAAQ,CAAC,mBAAmB;AACnD,UAAM,EAAE,GAAG,GAAG,OAAO,OAAO,IAAI;AAChC,WAAO,KAAK,IAAI,MAAM,CAAC;AACvB,WAAO,KAAK,IAAI,MAAM,CAAC;AACvB,WAAO,KAAK,IAAI,MAAM,IAAI,KAAK;AAC/B,WAAO,KAAK,IAAI,MAAM,IAAI,MAAM;AAAA,EACpC,CAAC;AAED,SAAO;AAAA,IACH,GAAG,IAAE,cAAc,SAAS,OAAO,cAAc;AAAA,IACjD,GAAG,IAAE,cAAc,SAAS,OAAO,cAAc;AAAA,IACjD,OAAO,IAAE,cAAc,SAAS,OAAO;AAAA,IACvC,QAAQ,IAAE,cAAc,SAAS,OAAO;AAAA,EAC5C;AACJ;AAEO,IAAM,qCAAqC,CAAC,OAAkC,eAA8B,mBAAmC;AAClJ,QAAM,oBAAoB,2BAA2B,eAAe,cAAc;AAClF,QAAM,6BAA6B;AAAA,IAC/B,GAAG,KAAK,MAAM,IAAE,eAAe,QAAQ,cAAc,SAAS,MAAM,UAAU,kBAAkB,EAAE;AAAA,IAClG,GAAG,KAAK,MAAM,IAAE,eAAe,QAAQ,cAAc,SAAS,MAAM,UAAU,kBAAkB,EAAE;AAAA,EACtG;AACA,SAAO;AACX;AAGO,IAAM,6CAA6C,CAAC,mBAAmC;AAC1F,SAAO;AAAA,IACH,OAAQ,IAAE,eAAe,QAAS,eAAe;AAAA,IACjD,QAAS,IAAE,eAAe,QAAS,eAAe;AAAA,EACtD;AACJ;AAEO,IAAM,yCAAyC,CAAC,gBAAgC,eAA6B;AAChH,SAAO;AAAA,IACH,OAAO,eAAe,QAAQ,WAAW;AAAA,IACzC,QAAQ,eAAe,QAAQ,WAAW;AAAA,EAC9C;AACJ;AAGO,IAAM,aAAa,CAAC,IAAW,OAAc;AAChD,SAAO,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;AACxE;","names":[]}